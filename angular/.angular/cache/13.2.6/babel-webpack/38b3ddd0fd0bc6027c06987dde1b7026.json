{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let VoiceRecognitionService = /*#__PURE__*/(() => {\n  class VoiceRecognitionService {\n    constructor() {\n      this.recognition = new webkitSpeechRecognition();\n      this.isStoppedSpeechRecog = false;\n      this.text = '';\n      this.isStarted = false; //<< this Flag to check if the user stop the service\n\n      this.isStoppedAutomatically = true; //<< this Flag to check if the service stopped automaticically.\n\n      this.transcript_arr = [];\n      this.confidence_arr = [];\n    }\n\n    init() {\n      this.recognition.continuous = true;\n      this.recognition.interimResults = true;\n      this.recognition.lang = 'pt-BR';\n      this.recognition.addEventListener('result', e => {\n        const transcript = Array.from(e.results).map(result => result[0]).map(result => result.transcript).join('');\n        this.transcript_arr.push(transcript);\n        this.tempWords = transcript;\n        console.log(this.transcript_arr);\n        const confidence = Array.from(e.results).map(result => result[0]).map(result => result.confidence).join('');\n        this.confidence_arr.push(confidence);\n        console.log(this.confidence_arr);\n      });\n      this.recognition.addEventListener('end', condition => {\n        this.wordConcat();\n\n        if (this.isStoppedAutomatically) {\n          this.recognition.stop();\n          console.log('stopped automatically!!');\n          this.recognition.start();\n          console.log('started automatically!!');\n          this.isStoppedAutomatically = true;\n        }\n      });\n    }\n\n    start(item) {\n      this.recognition.lang = item;\n\n      if (!this.isStarted) {\n        this.recognition.start();\n        this.isStarted = true;\n        console.log('Speech recognition started');\n      }\n\n      return true;\n    }\n\n    stop() {\n      if (this.isStarted) {\n        this.isStoppedAutomatically = false;\n        this.wordConcat();\n        this.recognition.stop();\n        this.isStarted = false;\n        console.log('End speech recognition by user');\n      }\n\n      return false;\n    }\n\n    wordConcat() {\n      this.text = this.tempWords;\n      this.tempWords = '';\n    }\n\n  }\n\n  VoiceRecognitionService.ɵfac = function VoiceRecognitionService_Factory(t) {\n    return new (t || VoiceRecognitionService)();\n  };\n\n  VoiceRecognitionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VoiceRecognitionService,\n    factory: VoiceRecognitionService.ɵfac,\n    providedIn: 'root'\n  });\n  return VoiceRecognitionService;\n})();","map":null,"metadata":{},"sourceType":"module"}
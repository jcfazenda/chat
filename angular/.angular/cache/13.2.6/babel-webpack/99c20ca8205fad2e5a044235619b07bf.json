{"ast":null,"code":"import { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { ConnectionService } from './connection.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./connection.service\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.Usuario = JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    Send(model) {\n      return this.apiService.post_api(model.Rota, model).pipe(map(res => {\n        return res;\n      }), catchError(error => {\n        return error;\n      }));\n    }\n\n    SendClient(model) {\n      return this.apiService.post_client(model.Rota, model).pipe(map(res => {\n        return res;\n      }), catchError(error => {\n        return error;\n      }));\n    }\n\n    GetGenerics(model) {\n      return this.apiService.post_api('Generics/GetList', model).pipe(map(res => {\n        return res;\n      }), catchError(error => {\n        return error;\n      }));\n    }\n    /* HUB Message */\n\n\n    SendMessage(model) {\n      return this.apiService.post_api(model.Rota, model).pipe(map(res => {\n        return res;\n      }), catchError(error => {\n        return error;\n      }));\n    }\n    /* Tenant */\n\n\n    SendTenat(cliente_Database, model) {\n      return this.apiService.post_api_tenant(cliente_Database, model.Rota, model).pipe(map(res => {\n        return res;\n      }), catchError(error => {\n        return error;\n      }));\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.ConnectionService));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}
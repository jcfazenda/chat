{"ast":null,"code":"import { trigger, state, style, transition, animate } from '@angular/animations';\nimport { EventEmitter, Inject, Injectable, TemplateRef, ChangeDetectorRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, InjectionToken, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction NotificationComponent_div_1_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_1_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.title)(\"ngTemplateOutletContext\", ctx_r3.item.context);\n  }\n}\n\nfunction NotificationComponent_div_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r5.title, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NotificationComponent_div_1_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_1_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.content)(\"ngTemplateOutletContext\", ctx_r6.item.context);\n  }\n}\n\nfunction NotificationComponent_div_1_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r8.content, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NotificationComponent_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r9.safeSvg, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NotificationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_1_div_1_Template, 2, 2, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NotificationComponent_div_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(4, NotificationComponent_div_1_div_4_Template, 2, 2, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, NotificationComponent_div_1_ng_template_5_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(7, NotificationComponent_div_1_div_7_Template, 1, 1, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r4 = ɵngcc0.ɵɵreference(3);\n\n    const _r7 = ɵngcc0.ɵɵreference(6);\n\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.titleIsTemplate)(\"ngIfElse\", _r4);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.contentIsTemplate)(\"ngIfElse\", _r7);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.item.icon !== \"bare\");\n  }\n}\n\nfunction NotificationComponent_div_2_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NotificationComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_2_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.item.html)(\"ngTemplateOutletContext\", ctx_r12.item.context);\n  }\n}\n\nfunction NotificationComponent_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r14.safeInputHtml, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NotificationComponent_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function NotificationComponent_div_2_div_4_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r17.onClickIcon($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"icon-hover\", ctx_r15.clickIconToClose);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r15.safeSvg, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NotificationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_2_div_1_Template, 2, 2, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(2, NotificationComponent_div_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 15, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(4, NotificationComponent_div_2_div_4_Template, 1, 3, \"div\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.htmlIsTemplate)(\"ngIfElse\", _r13);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.item.icon);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\n\nfunction NotificationComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelement(1, \"span\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(1, _c0, ctx_r2.progressWidth + \"%\"));\n  }\n}\n\nconst _c1 = function (a0, a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    \"alert\": a0,\n    \"error\": a1,\n    \"warn\": a2,\n    \"success\": a3,\n    \"info\": a4,\n    \"bare\": a5,\n    \"rtl-mode\": a6,\n    \"has-icon\": a7\n  };\n};\n\nfunction SimpleNotificationsComponent_simple_notification_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"simple-notification\", 2);\n  }\n\n  if (rf & 2) {\n    const a_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"item\", a_r1)(\"timeOut\", ctx_r0.timeOut)(\"clickToClose\", ctx_r0.clickToClose)(\"clickIconToClose\", ctx_r0.clickIconToClose)(\"maxLength\", ctx_r0.maxLength)(\"showProgressBar\", ctx_r0.showProgressBar)(\"pauseOnHover\", ctx_r0.pauseOnHover)(\"theClass\", ctx_r0.theClass)(\"rtl\", ctx_r0.rtl)(\"animate\", ctx_r0.animate)(\"position\", i_r2);\n  }\n}\n\nconst DEFAULT_ICONS = {\n  alert: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n        </svg>\n    `,\n  error: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n        </svg>\n    `,\n  info: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\n        </svg>\n    `,\n  success: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n        </svg>\n    `,\n  warn: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" width=\"64\" viewBox=\"0 0 64 64\" height=\"64\">\n          <circle cx=\"32.086\" cy=\"50.142\" r=\"2.256\"/>\n          <path d=\"M30.08 25.012V42.32c0 1.107.897 2.005 2.006 2.005s2.006-.897 2.006-2.005V25.012c0-1.107-.897-2.006-2.006-2.006s-2.006.898-2.006 2.006z\"/>\n          <path d=\"M63.766 59.234L33.856 3.082c-.697-1.308-2.844-1.308-3.54 0L.407 59.234c-.331.622-.312 1.372.051 1.975.362.605 1.015.975 1.72.975h59.816c.705 0 1.357-.369 1.721-.975.361-.603.381-1.353.051-1.975zM5.519 58.172L32.086 8.291l26.568 49.881H5.519z\"/>\n        </svg>\n    `\n};\nvar NotificationType = /*#__PURE__*/(() => {\n  (function (NotificationType) {\n    NotificationType[\"Success\"] = \"success\";\n    NotificationType[\"Error\"] = \"error\";\n    NotificationType[\"Alert\"] = \"alert\";\n    NotificationType[\"Info\"] = \"info\";\n    NotificationType[\"Warn\"] = \"warn\";\n    NotificationType[\"Bare\"] = \"bare\";\n  })(NotificationType || (NotificationType = {}));\n\n  return NotificationType;\n})();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nlet NotificationsService = /*#__PURE__*/(() => {\n  let NotificationsService = class NotificationsService {\n    constructor(globalOptions) {\n      this.globalOptions = globalOptions;\n      this.emitter = new Subject();\n      this.icons = DEFAULT_ICONS;\n    }\n\n    set(notification, to) {\n      notification.id = notification.override && notification.override.id ? notification.override.id : Math.random().toString(36).substring(3);\n      notification.click = new EventEmitter();\n      notification.clickIcon = new EventEmitter();\n      notification.timeoutEnd = new EventEmitter();\n      this.emitter.next({\n        command: 'set',\n        notification,\n        add: to\n      });\n      return notification;\n    }\n\n    success(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Success,\n        icon: this.icons.success,\n        override,\n        context\n      }, true);\n    }\n\n    error(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Error,\n        icon: this.icons.error,\n        override,\n        context\n      }, true);\n    }\n\n    alert(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Alert,\n        icon: this.icons.alert,\n        override,\n        context\n      }, true);\n    }\n\n    info(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Info,\n        icon: this.icons.info,\n        override,\n        context\n      }, true);\n    }\n\n    warn(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Warn,\n        icon: this.icons.warn,\n        override,\n        context\n      }, true);\n    }\n\n    bare(title = '', content = '', override, context) {\n      return this.set({\n        title,\n        content: content || '',\n        type: NotificationType.Bare,\n        icon: 'bare',\n        override,\n        context\n      }, true);\n    } // With type method\n\n\n    create(title = '', content = '', type = NotificationType.Success, override, context) {\n      return this.set({\n        title,\n        content,\n        type,\n        icon: this.icons[type],\n        override,\n        context\n      }, true);\n    } // HTML Notification method\n\n\n    html(html, type = NotificationType.Success, override, icon = 'bare', context) {\n      return this.set({\n        html,\n        type,\n        icon: this.icons[icon],\n        override,\n        context\n      }, true);\n    } // Remove all notifications method\n\n\n    remove(id) {\n      if (id) {\n        this.emitter.next({\n          command: 'clean',\n          id\n        });\n      } else {\n        this.emitter.next({\n          command: 'cleanAll'\n        });\n      }\n    }\n\n  };\n\n  NotificationsService.ɵfac = function NotificationsService_Factory(t) {\n    return new (t || NotificationsService)(ɵngcc0.ɵɵinject('options'));\n  };\n\n  NotificationsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NotificationsService,\n    factory: function (t) {\n      return NotificationsService.ɵfac(t);\n    }\n  });\n  NotificationsService = __decorate([__param(0, Inject('options'))], NotificationsService);\n  return NotificationsService;\n})();\n\nvar __decorate$1 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nlet NotificationComponent = /*#__PURE__*/(() => {\n  let NotificationComponent = class NotificationComponent {\n    constructor(notificationService, domSanitizer, cd, zone) {\n      this.notificationService = notificationService;\n      this.domSanitizer = domSanitizer;\n      this.cd = cd;\n      this.zone = zone;\n      this.titleIsTemplate = false;\n      this.contentIsTemplate = false;\n      this.htmlIsTemplate = false;\n      this.progressWidth = 0;\n      this.stopTime = false;\n      this.framesPerSecond = 40;\n\n      this.instance = () => {\n        const now = new Date().getTime();\n\n        if (this.endTime < now) {\n          this.remove();\n          this.item.timeoutEnd.emit();\n        } else if (!this.stopTime) {\n          if (this.showProgressBar) {\n            // We add this.sleepTime just to have 100% before close\n            this.progressWidth = Math.min((now - this.startTime + this.sleepTime) * 100 / this.timeOut, 100);\n          }\n\n          this.timer = setTimeout(this.instance, this.sleepTime);\n        }\n\n        this.zone.run(() => {\n          if (!this.cd.destroyed) {\n            this.cd.detectChanges();\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      if (this.item.override) {\n        this.attachOverrides();\n      }\n\n      if (this.animate) {\n        this.item.state = this.animate;\n      }\n\n      if (this.timeOut !== 0) {\n        this.startTimeOut();\n      }\n\n      this.contentType(this.item.title, 'title');\n      this.contentType(this.item.content, 'content');\n      this.contentType(this.item.html, 'html');\n      this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.icon || this.item.icon);\n      this.safeInputHtml = this.domSanitizer.bypassSecurityTrustHtml(this.item.html);\n    }\n\n    ngOnDestroy() {\n      clearTimeout(this.timer);\n      this.cd.detach();\n    }\n\n    startTimeOut() {\n      this.sleepTime = 1000 / this.framesPerSecond\n      /* ms */\n      ;\n      this.startTime = new Date().getTime();\n      this.endTime = this.startTime + this.timeOut;\n      this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.sleepTime));\n    }\n\n    onEnter() {\n      if (this.pauseOnHover) {\n        this.stopTime = true;\n        this.pauseStart = new Date().getTime();\n      }\n    }\n\n    onLeave() {\n      if (this.pauseOnHover) {\n        this.stopTime = false;\n        this.startTime += new Date().getTime() - this.pauseStart;\n        this.endTime += new Date().getTime() - this.pauseStart;\n        this.zone.runOutsideAngular(() => setTimeout(this.instance, this.sleepTime));\n      }\n    }\n\n    onClick(event) {\n      this.item.click.emit(event);\n\n      if (this.clickToClose) {\n        this.remove();\n      }\n    }\n\n    onClickIcon(event) {\n      this.item.clickIcon.emit(event);\n\n      if (this.clickIconToClose) {\n        this.remove();\n      }\n    } // Attach all the overrides\n\n\n    attachOverrides() {\n      Object.keys(this.item.override).forEach(a => {\n        if (this.hasOwnProperty(a)) {\n          this[a] = this.item.override[a];\n        }\n      });\n    }\n\n    remove() {\n      if (this.animate) {\n        this.item.state = this.animate + 'Out';\n        setTimeout(() => {\n          this.notificationService.set(this.item, false);\n        }, 310);\n      } else {\n        this.notificationService.set(this.item, false);\n      }\n    }\n\n    contentType(item, key) {\n      if (item instanceof TemplateRef) {\n        this[key] = item;\n      } else {\n        this[key] = this.domSanitizer.bypassSecurityTrustHtml(item);\n      }\n\n      this[key + 'IsTemplate'] = item instanceof TemplateRef;\n    }\n\n  };\n\n  NotificationComponent.ɵfac = function NotificationComponent_Factory(t) {\n    return new (t || NotificationComponent)(ɵngcc0.ɵɵdirectiveInject(NotificationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  NotificationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NotificationComponent,\n    selectors: [[\"simple-notification\"]],\n    inputs: {\n      timeOut: \"timeOut\",\n      showProgressBar: \"showProgressBar\",\n      pauseOnHover: \"pauseOnHover\",\n      clickToClose: \"clickToClose\",\n      clickIconToClose: \"clickIconToClose\",\n      maxLength: \"maxLength\",\n      theClass: \"theClass\",\n      rtl: \"rtl\",\n      animate: \"animate\",\n      position: \"position\",\n      item: \"item\"\n    },\n    decls: 4,\n    vars: 16,\n    consts: [[1, \"simple-notification\", 3, \"ngClass\", \"click\", \"mouseenter\", \"mouseleave\"], [4, \"ngIf\"], [\"class\", \"sn-progress-loader\", 4, \"ngIf\"], [\"class\", \"sn-title\", 4, \"ngIf\", \"ngIfElse\"], [\"regularTitle\", \"\"], [\"class\", \"sn-content\", 4, \"ngIf\", \"ngIfElse\"], [\"regularContent\", \"\"], [\"class\", \"icon\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"sn-title\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"sn-title\", 3, \"innerHTML\"], [1, \"sn-content\"], [1, \"sn-content\", 3, \"innerHTML\"], [1, \"icon\", 3, \"innerHTML\"], [\"class\", \"sn-html\", 4, \"ngIf\", \"ngIfElse\"], [\"regularHtml\", \"\"], [\"class\", \"icon\", 3, \"icon-hover\", \"innerHTML\", \"click\", 4, \"ngIf\"], [1, \"sn-html\"], [1, \"icon\", 3, \"innerHTML\", \"click\"], [1, \"sn-progress-loader\"], [3, \"ngStyle\"]],\n    template: function NotificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NotificationComponent_Template_div_click_0_listener($event) {\n          return ctx.onClick($event);\n        })(\"mouseenter\", function NotificationComponent_Template_div_mouseenter_0_listener() {\n          return ctx.onEnter();\n        })(\"mouseleave\", function NotificationComponent_Template_div_mouseleave_0_listener() {\n          return ctx.onLeave();\n        });\n        ɵngcc0.ɵɵtemplate(1, NotificationComponent_div_1_Template, 8, 5, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NotificationComponent_div_2_Template, 5, 3, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, NotificationComponent_div_3_Template, 2, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.theClass);\n        ɵngcc0.ɵɵproperty(\"@enterLeave\", ctx.item.state)(\"ngClass\", ɵngcc0.ɵɵpureFunction8(7, _c1, ctx.item.type === \"alert\", ctx.item.type === \"error\", ctx.item.type === \"warn\", ctx.item.type === \"success\", ctx.item.type === \"info\", ctx.item.type === \"bare\", ctx.rtl, ctx.item.icon !== \"bare\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.item.html);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.item.html);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showProgressBar);\n      }\n    },\n    directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgStyle],\n    styles: [\".simple-notification{width:100%;padding:10px 20px;box-sizing:border-box;position:relative;float:left;margin-bottom:10px;color:#fff;cursor:pointer;transition:.5s;min-height:70px}.simple-notification .sn-content,.simple-notification .sn-html,.simple-notification .sn-title{margin:0}.simple-notification .sn-title{line-height:30px;font-size:20px}.simple-notification .sn-content{font-size:16px;line-height:20px}.simple-notification.has-icon .sn-content,.simple-notification.has-icon .sn-html,.simple-notification.has-icon .sn-title{padding:0 50px 0 0}.simple-notification .icon{position:absolute;box-sizing:border-box;top:0;right:0;width:70px;height:70px;padding:10px}.simple-notification .icon.icon-hover:hover{opacity:.5}.simple-notification .icon svg{fill:#fff;width:100%;height:100%}.simple-notification .icon svg g{fill:#fff}.simple-notification.rtl-mode.has-icon .sn-content,.simple-notification.rtl-mode.has-icon .sn-html,.simple-notification.rtl-mode.has-icon .sn-title{padding:0 0 0 50px}.simple-notification.rtl-mode{direction:rtl}.simple-notification.rtl-mode .sn-content{padding:0 0 0 50px}.simple-notification.rtl-mode svg{left:0;right:auto}.simple-notification.error{background:#f44336}.simple-notification.success{background:#8bc34a}.simple-notification.alert{background:#ffdb5b}.simple-notification.info{background:#03a9f4}.simple-notification.warn{background:#ffdb5b}.simple-notification .sn-progress-loader{position:absolute;top:0;left:0;width:100%;height:5px}.simple-notification .sn-progress-loader span{float:left;height:100%}.simple-notification.success .sn-progress-loader span{background:#689f38}.simple-notification.error .sn-progress-loader span{background:#d32f2f}.simple-notification.alert .sn-progress-loader span{background:#edc242}.simple-notification.info .sn-progress-loader span{background:#0288d1}.simple-notification.warn .sn-progress-loader span{background:#edc242}.simple-notification.bare .sn-progress-loader span{background:#ccc}.simple-notification.warn div .sn-content,.simple-notification.warn div .sn-html,.simple-notification.warn div .sn-title{color:#444}\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('enterLeave', [// Fade\n      state('fade', style({\n        opacity: 1\n      })), transition('* => fade', [style({\n        opacity: 0\n      }), animate('400ms ease-in-out')]), state('fadeOut', style({\n        opacity: 0\n      })), transition('fade => fadeOut', [style({\n        opacity: 1\n      }), animate('300ms ease-in-out')]), // Enter from top\n      state('fromTop', style({\n        opacity: 1,\n        transform: 'translateY(0)'\n      })), transition('* => fromTop', [style({\n        opacity: 0,\n        transform: 'translateY(-5%)'\n      }), animate('400ms ease-in-out')]), state('fromTopOut', style({\n        opacity: 0,\n        transform: 'translateY(5%)'\n      })), transition('fromTop => fromTopOut', [style({\n        opacity: 1,\n        transform: 'translateY(0)'\n      }), animate('300ms ease-in-out')]), // Enter from right\n      state('fromRight', style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      })), transition('* => fromRight', [style({\n        opacity: 0,\n        transform: 'translateX(5%)'\n      }), animate('400ms ease-in-out')]), state('fromRightOut', style({\n        opacity: 0,\n        transform: 'translateX(-5%)'\n      })), transition('fromRight => fromRightOut', [style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      }), animate('300ms ease-in-out')]), // Enter from bottom\n      state('fromBottom', style({\n        opacity: 1,\n        transform: 'translateY(0)'\n      })), transition('* => fromBottom', [style({\n        opacity: 0,\n        transform: 'translateY(5%)'\n      }), animate('400ms ease-in-out')]), state('fromBottomOut', style({\n        opacity: 0,\n        transform: 'translateY(-5%)'\n      })), transition('fromBottom => fromBottomOut', [style({\n        opacity: 1,\n        transform: 'translateY(0)'\n      }), animate('300ms ease-in-out')]), // Enter from left\n      state('fromLeft', style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      })), transition('* => fromLeft', [style({\n        opacity: 0,\n        transform: 'translateX(-5%)'\n      }), animate('400ms ease-in-out')]), state('fromLeftOut', style({\n        opacity: 0,\n        transform: 'translateX(5%)'\n      })), transition('fromLeft => fromLeftOut', [style({\n        opacity: 1,\n        transform: 'translateX(0)'\n      }), animate('300ms ease-in-out')]), // Rotate\n      state('scale', style({\n        opacity: 1,\n        transform: 'scale(1)'\n      })), transition('* => scale', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate('400ms ease-in-out')]), state('scaleOut', style({\n        opacity: 0,\n        transform: 'scale(0)'\n      })), transition('scale => scaleOut', [style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }), animate('400ms ease-in-out')]), // Scale\n      state('rotate', style({\n        opacity: 1,\n        transform: 'rotate(0deg)'\n      })), transition('* => rotate', [style({\n        opacity: 0,\n        transform: 'rotate(5deg)'\n      }), animate('400ms ease-in-out')]), state('rotateOut', style({\n        opacity: 0,\n        transform: 'rotate(-5deg)'\n      })), transition('rotate => rotateOut', [style({\n        opacity: 1,\n        transform: 'rotate(0deg)'\n      }), animate('400ms ease-in-out')])])]\n    },\n    changeDetection: 0\n  });\n  return NotificationComponent;\n})();\n\n__decorate$1([Input()], NotificationComponent.prototype, \"timeOut\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"showProgressBar\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"pauseOnHover\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"clickToClose\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"clickIconToClose\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"maxLength\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"theClass\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"rtl\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"animate\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"position\", void 0);\n\n__decorate$1([Input()], NotificationComponent.prototype, \"item\", void 0);\n\nvar NotificationAnimationType = /*#__PURE__*/(() => {\n  (function (NotificationAnimationType) {\n    NotificationAnimationType[\"Fade\"] = \"fade\";\n    NotificationAnimationType[\"FromTop\"] = \"fromTop\";\n    NotificationAnimationType[\"FromRight\"] = \"fromRight\";\n    NotificationAnimationType[\"FromBottom\"] = \"fromBottom\";\n    NotificationAnimationType[\"FromLeft\"] = \"fromLeft\";\n    NotificationAnimationType[\"Scale\"] = \"scale\";\n    NotificationAnimationType[\"Rotate\"] = \"rotate\";\n  })(NotificationAnimationType || (NotificationAnimationType = {}));\n\n  return NotificationAnimationType;\n})();\n\nvar __decorate$2 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nlet SimpleNotificationsComponent = /*#__PURE__*/(() => {\n  let SimpleNotificationsComponent = class SimpleNotificationsComponent {\n    constructor(service, cd) {\n      this.service = service;\n      this.cd = cd;\n      this.create = new EventEmitter();\n      this.destroy = new EventEmitter();\n      this.notifications = [];\n      this.position = ['bottom', 'right']; // Received values\n\n      this.lastOnBottom = true;\n      this.maxStack = 8;\n      this.preventLastDuplicates = false;\n      this.preventDuplicates = false; // Sent values\n\n      this.timeOut = 0;\n      this.maxLength = 0;\n      this.clickToClose = true;\n      this.clickIconToClose = false;\n      this.showProgressBar = true;\n      this.pauseOnHover = true;\n      this.theClass = '';\n      this.rtl = false;\n      this.animate = NotificationAnimationType.FromRight;\n      this.usingComponentOptions = false;\n    }\n\n    set options(opt) {\n      this.usingComponentOptions = true;\n      this.attachChanges(opt);\n    }\n\n    ngOnInit() {\n      /**\r\n       * Only attach global options if config\r\n       * options were never sent through input\r\n       */\n      if (!this.usingComponentOptions) {\n        this.attachChanges(this.service.globalOptions);\n      }\n\n      this.listener = this.service.emitter.subscribe(item => {\n        switch (item.command) {\n          case 'cleanAll':\n            this.notifications = [];\n            break;\n\n          case 'clean':\n            this.cleanSingle(item.id);\n            break;\n\n          case 'set':\n            if (item.add) {\n              this.add(item.notification);\n            } else {\n              this.defaultBehavior(item);\n            }\n\n            break;\n\n          default:\n            this.defaultBehavior(item);\n            break;\n        }\n\n        if (!this.cd.destroyed) {\n          this.cd.detectChanges();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.listener) {\n        this.listener.unsubscribe();\n      }\n\n      this.cd.detach();\n    } // Default behavior on event\n\n\n    defaultBehavior(value) {\n      this.notifications.splice(this.notifications.indexOf(value.notification), 1);\n      this.destroy.emit(this.buildEmit(value.notification, false));\n    } // Add the new notification to the notification array\n\n\n    add(item) {\n      item.createdOn = new Date();\n      const toBlock = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false; // Save this as the last created notification\n\n      this.lastNotificationCreated = item; // Override icon if set\n\n      if (item.override && item.override.icons && item.override.icons[item.type]) {\n        item.icon = item.override.icons[item.type];\n      }\n\n      if (!toBlock) {\n        // Check if the notification should be added at the start or the end of the array\n        if (this.lastOnBottom) {\n          if (this.notifications.length >= this.maxStack) {\n            this.notifications.splice(0, 1);\n          }\n\n          this.notifications.push(item);\n        } else {\n          if (this.notifications.length >= this.maxStack) {\n            this.notifications.splice(this.notifications.length - 1, 1);\n          }\n\n          this.notifications.splice(0, 0, item);\n        }\n\n        this.create.emit(this.buildEmit(item, true));\n      }\n    } // Check if notifications should be prevented\n\n\n    block(item) {\n      const toCheck = item.html ? this.checkHtml : this.checkStandard;\n\n      if (this.preventDuplicates && this.notifications.length > 0) {\n        for (const notification of this.notifications) {\n          if (toCheck(notification, item)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.preventLastDuplicates) {\n        let comp;\n\n        if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\n          if (this.lastOnBottom) {\n            comp = this.notifications[this.notifications.length - 1];\n          } else {\n            comp = this.notifications[0];\n          }\n        } else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\n          comp = this.lastNotificationCreated;\n        } else {\n          return false;\n        }\n\n        return toCheck(comp, item);\n      }\n\n      return false;\n    }\n\n    checkStandard(checker, item) {\n      return checker.type === item.type && checker.title === item.title && checker.content === item.content;\n    }\n\n    checkHtml(checker, item) {\n      return checker.html ? checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html : false;\n    } // Attach all the changes received in the options object\n\n\n    attachChanges(options) {\n      for (const key in options) {\n        if (this.hasOwnProperty(key)) {\n          this[key] = options[key];\n        } else if (key === 'icons') {\n          this.service.icons = options[key];\n        }\n      }\n    }\n\n    buildEmit(notification, to) {\n      const toEmit = {\n        createdOn: notification.createdOn,\n        type: notification.type,\n        icon: notification.icon,\n        id: notification.id\n      };\n\n      if (notification.html) {\n        toEmit.html = notification.html;\n      } else {\n        toEmit.title = notification.title;\n        toEmit.content = notification.content;\n      }\n\n      if (!to) {\n        toEmit.destroyedOn = new Date();\n      }\n\n      return toEmit;\n    }\n\n    cleanSingle(id) {\n      let indexOfDelete = 0;\n      let doDelete = false;\n      let noti;\n      this.notifications.forEach((notification, idx) => {\n        if (notification.id === id) {\n          indexOfDelete = idx;\n          noti = notification;\n          doDelete = true;\n        }\n      });\n\n      if (doDelete) {\n        this.notifications.splice(indexOfDelete, 1);\n        this.destroy.emit(this.buildEmit(noti, false));\n      }\n    }\n\n  };\n\n  SimpleNotificationsComponent.ɵfac = function SimpleNotificationsComponent_Factory(t) {\n    return new (t || SimpleNotificationsComponent)(ɵngcc0.ɵɵdirectiveInject(NotificationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  SimpleNotificationsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SimpleNotificationsComponent,\n    selectors: [[\"simple-notifications\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      create: \"create\",\n      destroy: \"destroy\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"simple-notification-wrapper\", 3, \"ngClass\"], [3, \"item\", \"timeOut\", \"clickToClose\", \"clickIconToClose\", \"maxLength\", \"showProgressBar\", \"pauseOnHover\", \"theClass\", \"rtl\", \"animate\", \"position\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"timeOut\", \"clickToClose\", \"clickIconToClose\", \"maxLength\", \"showProgressBar\", \"pauseOnHover\", \"theClass\", \"rtl\", \"animate\", \"position\"]],\n    template: function SimpleNotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, SimpleNotificationsComponent_simple_notification_1_Template, 1, 11, \"simple-notification\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.position);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.notifications);\n      }\n    },\n    directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, NotificationComponent],\n    styles: [\".simple-notification-wrapper{position:fixed;width:300px;z-index:1000}.simple-notification-wrapper.left{left:20px}.simple-notification-wrapper.top{top:20px}.simple-notification-wrapper.right{right:20px}.simple-notification-wrapper.bottom{bottom:20px}.simple-notification-wrapper.center{left:50%;transform:translateX(-50%)}.simple-notification-wrapper.middle{top:50%;transform:translateY(-50%)}.simple-notification-wrapper.middle.center{transform:translate(-50%,-50%)}@media (max-width:340px){.simple-notification-wrapper{width:auto;left:20px;right:20px}}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SimpleNotificationsComponent;\n})();\n\n__decorate$2([Input()], SimpleNotificationsComponent.prototype, \"options\", null);\n\n__decorate$2([Output()], SimpleNotificationsComponent.prototype, \"create\", void 0);\n\n__decorate$2([Output()], SimpleNotificationsComponent.prototype, \"destroy\", void 0);\n\nconst DEFAULT_OPTIONS = {\n  position: ['bottom', 'right'],\n  timeOut: 0,\n  showProgressBar: true,\n  pauseOnHover: true,\n  lastOnBottom: true,\n  clickToClose: true,\n  clickIconToClose: false,\n  maxLength: 0,\n  maxStack: 8,\n  preventDuplicates: false,\n  preventLastDuplicates: false,\n  theClass: '',\n  rtl: false,\n  animate: NotificationAnimationType.FromRight,\n  icons: DEFAULT_ICONS\n};\n\nvar __decorate$3 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar SimpleNotificationsModule_1;\nconst OPTIONS = new InjectionToken('options');\n\nfunction optionsFactory(options) {\n  return Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n}\n\nlet SimpleNotificationsModule = SimpleNotificationsModule_1 = class SimpleNotificationsModule {\n  static forRoot(options = {}) {\n    return {\n      ngModule: SimpleNotificationsModule_1,\n      providers: [NotificationsService, {\n        provide: OPTIONS,\n        useValue: options\n      }, {\n        provide: 'options',\n        useFactory: optionsFactory,\n        deps: [OPTIONS]\n      }]\n    };\n  }\n\n};\n\nSimpleNotificationsModule.ɵfac = function SimpleNotificationsModule_Factory(t) {\n  return new (t || SimpleNotificationsModule)();\n};\n\nSimpleNotificationsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: SimpleNotificationsModule\n});\nSimpleNotificationsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SimpleNotificationsModule, {\n    declarations: function () {\n      return [SimpleNotificationsComponent, NotificationComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SimpleNotificationsComponent];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NotificationAnimationType, NotificationComponent, NotificationType, NotificationsService, OPTIONS, SimpleNotificationsComponent, SimpleNotificationsModule, optionsFactory }; //# sourceMappingURL=angular2-notifications.js.map","map":null,"metadata":{},"sourceType":"module"}
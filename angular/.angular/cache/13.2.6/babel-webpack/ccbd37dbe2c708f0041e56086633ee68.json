{"ast":null,"code":"import Swal from 'sweetalert2/dist/sweetalert2.js';\nimport * as i0 from \"@angular/core\";\nexport let GenericsService = /*#__PURE__*/(() => {\n  class GenericsService {\n    constructor() {}\n\n    HTTPConnection() {\n      let HTTPConnection = {\n        api: [{\n          id: 1,\n          name: 'naka',\n          icon: 'fa fa-globe',\n          label: 'naka',\n          type: 'api',\n          active: false,\n          url: 'https://egrc-api-hmg-dot-risk-tools-hmg.rj.r.appspot.com/'\n        }, {\n          id: 2,\n          name: 'naka',\n          icon: 'fa fa-database',\n          label: 'naka',\n          type: 'api',\n          active: true,\n          url: 'https://localhost:5001/'\n        }\n        /* homologacao em debug */\n        ],\n        client: [{\n          id: 1,\n          name: 'naka',\n          icon: '',\n          label: 'naka',\n          type: 'api',\n          active: false,\n          url: 'https://grc_api_client.grcteam.com.br/'\n        }, {\n          id: 2,\n          name: 'naka',\n          icon: 'fa fa-database',\n          label: 'naka',\n          type: 'api',\n          active: true,\n          url: 'https://localhost:5001/'\n        }\n        /* homologacao em debug *** */\n        ]\n      };\n      return HTTPConnection;\n    }\n\n    GetFuncoesConfig() {\n      let _item = [];\n\n      _item.push({\n        name: 'item_btn_group',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_print',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_edit',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_create',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_delete',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_view_register',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_active_inactive',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_associate_workflow',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_search',\n        visible: false\n      });\n\n      _item.push({\n        name: 'item_cadastrar',\n        visible: true\n      });\n\n      return _item;\n    }\n\n    ConfigEditDisable() {\n      let config = {\n        editable: true,\n        spellcheck: true,\n        height: '15rem',\n        minHeight: '5rem',\n        placeholder: 'Enter text here...',\n        translate: 'no',\n        customClasses: [{\n          name: \"quote\",\n          class: \"quote\"\n        }, {\n          name: 'redText',\n          class: 'redText'\n        }, {\n          name: \"titleText\",\n          class: \"titleText\",\n          tag: \"h1\"\n        }]\n      };\n      return config;\n    }\n\n    ConfigEdit() {\n      let config = {\n        placeholder: '',\n        tabsize: 2,\n        height: '300px',\n        uploadImagePath: '',\n        translate: 'yes',\n        enableToolbar: true,\n        editable: true,\n        showToolbar: true,\n        uploadUrl: 'v1/image',\n        toolbar: [['misc', ['codeview', 'undo', 'redo']], ['style', ['bold', 'italic', 'underline', 'clear']], ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']], ['fontsize', ['fontname', 'fontsize', 'color']], ['para', ['style', 'ul', 'ol', 'paragraph', 'height']], ['insert', ['table', 'picture', 'link', 'video', 'hr']]],\n        fontNames: ['Helvetica', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Roboto', 'Times']\n      };\n      return config;\n    }\n\n    TelaCategoria() {\n      let item = [{\n        isChecked: 'btn-info',\n        name: 'Todos',\n        value: 'option2',\n        active: true\n      }, {\n        isChecked: '',\n        name: 'Cadastros comuns',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: '',\n        name: 'Avaliaçãpo de Riscos',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: '',\n        name: 'Financeiro',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: '',\n        name: 'Admistrativo',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: '',\n        name: 'Licenças',\n        value: 'option2',\n        active: false\n      }];\n      return item;\n    }\n\n    ActiveInactive() {\n      let item = [{\n        isChecked: '',\n        name: 'Inativo',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: 'checked',\n        name: 'Ativo',\n        value: 'option1',\n        active: true\n      }];\n      return item;\n    }\n\n    EfetivoInefetivo() {\n      let item = [{\n        isChecked: '',\n        name: 'Inefetivo',\n        value: 'option2',\n        active: false\n      }, {\n        isChecked: 'checked',\n        name: 'Efetivo',\n        value: 'option1',\n        active: true\n      }];\n      return item;\n    }\n\n    ColorPalet() {\n      let colors = [{\n        color: '#000000'\n      }, {\n        color: '#1C1C1C'\n      }, {\n        color: '#363636'\n      }, {\n        color: '#4F4F4F'\n      }, {\n        color: '#696969'\n      }, {\n        color: '#808080'\n      }, {\n        color: '#A9A9A9'\n      }, {\n        color: '#C0C0C0'\n      }, {\n        color: '#D3D3D3'\n      }, {\n        color: '#DCDCDC'\n      }, {\n        color: '#6A5ACD'\n      }, {\n        color: '#836FFF'\n      }, {\n        color: '#6959CD'\n      }, {\n        color: '#483D8B'\n      }, {\n        color: '#191970'\n      }, {\n        color: '#000080'\n      }, {\n        color: '#00008B'\n      }, {\n        color: '#0000CD'\n      }, {\n        color: '#0000FF'\n      }, {\n        color: '#6495ED'\n      }, {\n        color: '#4169E1'\n      }, {\n        color: '#1E90FF'\n      }, {\n        color: '#00BFFF'\n      }, {\n        color: '#87CEFA'\n      }, {\n        color: '#87CEEB'\n      }, {\n        color: '#ADD8E6'\n      }, {\n        color: '#4682B4'\n      }, {\n        color: '#B0C4DE'\n      }, {\n        color: '#708090'\n      }, {\n        color: '#778899'\n      }, {\n        color: '#00FFFF'\n      }, {\n        color: '#00CED1'\n      }, {\n        color: '#40E0D0'\n      }, {\n        color: '#48D1CC'\n      }, {\n        color: '#20B2AA'\n      }, {\n        color: '#008B8B'\n      }, {\n        color: '#008080'\n      }, {\n        color: '#7FFFD4'\n      }, {\n        color: '#66CDAA'\n      }, {\n        color: '#5F9EA0'\n      }, {\n        color: '#2F4F4F'\n      }, {\n        color: '#00FA9A'\n      }, {\n        color: '#00FF7F'\n      }, {\n        color: '#98FB98'\n      }, {\n        color: '#90EE90'\n      }, {\n        color: '#8FBC8F'\n      }, {\n        color: '#3CB371'\n      }, {\n        color: '#2E8B57'\n      }, {\n        color: '#006400'\n      }, {\n        color: '#008000'\n      }, {\n        color: '#228B22'\n      }, {\n        color: '#32CD32'\n      }, {\n        color: '#00FF00'\n      }, {\n        color: '#7CFC00'\n      }, {\n        color: '#7FFF00'\n      }, {\n        color: '#ADFF2F'\n      }, {\n        color: '#9ACD32'\n      }, {\n        color: '6B8E23'\n      }, {\n        color: '#556B2F'\n      }, {\n        color: '#808000'\n      }, {\n        color: '#BDB76B'\n      }, {\n        color: '#DAA520'\n      }, {\n        color: '#B8860B'\n      }, {\n        color: '#8B4513'\n      }, {\n        color: '#A0522D'\n      }, {\n        color: '#BC8F8F'\n      }, {\n        color: '#CD853F'\n      }, {\n        color: '#D2691E'\n      }, {\n        color: '#F4A460'\n      }, {\n        color: '#FFDEAD'\n      }, {\n        color: '#F5DEB3'\n      }, {\n        color: '#DEB887'\n      }, {\n        color: '#D2B48C'\n      }, {\n        color: '#7B68EE'\n      }, {\n        color: '#9370DB'\n      }, {\n        color: '#8A2BE2'\n      }, {\n        color: '#4B0082'\n      }, {\n        color: '#9400D3'\n      }, {\n        color: '#9932CC'\n      }, {\n        color: '#BA55D3'\n      }, {\n        color: '#A020F0'\n      }, {\n        color: '#8B008B'\n      }, {\n        color: '#FF00FF'\n      }, {\n        color: '#EE82EE'\n      }, {\n        color: '#DA70D6'\n      }, {\n        color: '#DDA0DD'\n      }, {\n        color: '#C71585'\n      }, {\n        color: '#FF1493'\n      }, {\n        color: '#FF69B4'\n      }, {\n        color: '#DB7093'\n      }, {\n        color: '#FFB6C1'\n      }, {\n        color: '#FFC0CB'\n      }, {\n        color: '#F08080'\n      }, {\n        color: '#CD5C5C'\n      }, {\n        color: '#DC143C'\n      }, {\n        color: '#800000'\n      }, {\n        color: '#8B0000'\n      }, {\n        color: '#B22222'\n      }, {\n        color: '#A52A2A'\n      }, {\n        color: '#FA8072'\n      }, {\n        color: '#E9967A'\n      }, {\n        color: '#FFA07A'\n      }, {\n        color: '#FF7F50'\n      }, {\n        color: '#FF6347'\n      }, {\n        color: '#FF0000'\n      }, {\n        color: '#FF4500'\n      }, {\n        color: '#FF8C00'\n      }, {\n        color: '#FFA500'\n      }, {\n        color: '#FFD700'\n      }, {\n        color: '#FFFF00'\n      }, {\n        color: '#F0E68C'\n      }, {\n        color: '#F0F8FF'\n      }, {\n        color: '#F8F8FF'\n      }, {\n        color: '#FFFAFA'\n      }, {\n        color: '#FFF5EE'\n      }, {\n        color: '#FFFAF0'\n      }, {\n        color: '#F5F5F5'\n      }, {\n        color: '#F5F5DC'\n      }, {\n        color: '#FDF5E6'\n      }, {\n        color: '#FFFFF0'\n      }, {\n        color: '#FAF0E6'\n      }, {\n        color: '#FFF8DC'\n      }, {\n        color: '#FAEBD7'\n      }, {\n        color: '#FFEBCD'\n      }, {\n        color: '#FFE4C4'\n      }, {\n        color: '#FFFFE0'\n      }, {\n        color: '#FFFACD'\n      }, {\n        color: '#FAFAD2'\n      }, {\n        color: '#FFEFD5'\n      }, {\n        color: '#FFDAB9'\n      }, {\n        color: '#FFE4B5'\n      }, {\n        color: '#EEE8AA'\n      }, {\n        color: '#FFE4E1'\n      }, {\n        color: '#FFF0F5'\n      }, {\n        color: '#E6E6FA'\n      }, {\n        color: '#D8BFD8'\n      }, {\n        color: '#F0FFFF'\n      }, {\n        color: '#E0FFFF'\n      }, {\n        color: '#B0E0E6'\n      }, {\n        color: '#E0FFFF'\n      }, {\n        color: '#F0FFF0'\n      }, {\n        color: '#F5FFFA'\n      }];\n      return colors;\n    }\n\n    RiscoTratamentoTipo() {\n      let item = [{\n        isChecked: '',\n        id: 1,\n        name: 'Evitar',\n        value: 'option2'\n      }, {\n        isChecked: '',\n        id: 3,\n        name: 'Compartilhar',\n        value: 'option2'\n      }, {\n        isChecked: '',\n        id: 2,\n        name: 'Mitigar',\n        value: 'option2'\n      }];\n      return item;\n    }\n\n    SweetAlert(data) {\n      Swal.fire(data.title, data.message, data.type);\n    }\n\n    confirmBox() {\n      Swal.fire({\n        title: 'Are you sure want to remove?',\n        text: 'You will not be able to recover this file!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        cancelButtonText: 'No, keep it'\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('Deleted!', 'Your imaginary file has been deleted.', 'success');\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n        }\n      });\n    }\n\n    leftPad(value, totalWidth, paddingChar) {\n      var length = totalWidth - value.toString().length + 1;\n      return Array(length).join(paddingChar || '0') + value;\n    }\n\n  }\n\n  GenericsService.ɵfac = function GenericsService_Factory(t) {\n    return new (t || GenericsService)();\n  };\n\n  GenericsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GenericsService,\n    factory: GenericsService.ɵfac,\n    providedIn: 'root'\n  });\n  return GenericsService;\n})();","map":null,"metadata":{},"sourceType":"module"}
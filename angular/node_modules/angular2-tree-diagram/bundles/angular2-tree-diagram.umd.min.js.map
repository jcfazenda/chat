{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular2-tree-diagram/lib/classes/node.class.ts","ng://angular2-tree-diagram/lib/classes/node-maker.class.ts","ng://angular2-tree-diagram/lib/classes/nodes-list.class.ts","ng://angular2-tree-diagram/lib/services/nodes-list.service.ts","ng://angular2-tree-diagram/lib/tree.component.ts","ng://angular2-tree-diagram/lib/node/node.component.ts","ng://angular2-tree-diagram/lib/tree.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","next","value","done","TreeDiagramNode","props","config","getThisNodeList","this","guid","prop","toggleState","nodeWidth","width","nodeHeight","height","children","Set","prototype","destroy","hasChildren","size","toggle","state","toggleSiblings","childrenCount","isRoot","parentId","dragenter","event","dataTransfer","dropEffect","dragleave","isDragover","dragstart","effectAllowed","isDragging","draggingNodeGuid","dragover","preventDefault","dragend","drop","transfer","addChild","newNodeGuid","newNode","add","TreeDiagramNodeMaker","_this","_super","apply","isMakerState","__","constructor","create","__extends","rootNode","displayName","getNode","node","TreeDiagramNodesList","nodes","nodeTemplate","nodesList","Map","forEach","treeNode","set","bind","makeRoots","makerGuid","uuidv4","maker","values","get","delete","originId","targetId","origin","remakeRoots","parent_2","serialize","nodeGuid","_b","roots","_c","root","out","json","from","push","child","assign","replace","Math","random","toString","filter","NodesListService","loadNodes","makerNode","toJsonString","JSON","stringify","Injectable","TreeComponent","nodesSrv","sanitizer","paneDragging","zoom","paneX","paneY","paneTransformState","data","isArray","onmousedown","onmousemove","movementX","movementY","makeTransform","onmouseup","paneTransform","bypassSecurityTrustStyle","preventMouse","stopPropagation","onmousewheel","delta","detail","wheelDelta","min","max","DomSanitizer","Input","Component","selector","template","NodeComponent","isRtl","document","getElementsByTagName","getAttribute","calculation","round","childrenTransform","onNodeBlur","nodeId","innerText","TreeDiagramModule","NgModule","declarations","imports","CommonModule","exports","providers"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAgCrB,SAASO,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HZ,EAAvHa,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOV,OAAOe,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASpB,EAAIS,EAAWW,MAAIJ,GAAKH,EAAI,EAAIb,EAAEgB,GAAKH,EAAI,EAAIb,EAAEU,EAAQC,EAAKK,GAAKhB,EAAEU,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKd,OAAOmB,eAAeX,EAAQC,EAAKK,GAAIA,EAoDzD,SAASM,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWN,EAAI,EAChE,OAAII,EAAUA,EAAEG,KAAKJ,GACd,CACHK,KAAM,WAEF,OADIL,GAAKH,GAAKG,EAAER,SAAQQ,OAAI,GACrB,CAAEM,MAAON,GAAKA,EAAEH,KAAMU,MAAOP,sBCjG9C,SAAAQ,EACEC,EACAC,EACOC,GAEP,GAFOC,KAAAD,gBAAAA,EAEFF,EAAMI,KAAX,CAIA,IAAK,IAAMC,KAAQL,EACbA,EAAMzB,eAAe8B,KACvBF,KAAKE,GAAQL,EAAMK,IAIvBF,KAAKG,aAAc,EAEfL,EAAOM,YACTJ,KAAKK,MAAQP,EAAOM,WAGlBN,EAAOQ,aACTN,KAAKO,OAAST,EAAOQ,YAGvBN,KAAKQ,SAAW,IAAIC,IAAIZ,EAAMW,WA6ElC,OA1GEzC,OAAAmB,eAAWU,EAAAc,UAAA,UAAO,KAAlB,WACE,OAAO,mCA+BT3C,OAAAmB,eAAWU,EAAAc,UAAA,aAAU,KAArB,WACE,OAAOV,KAAKG,6CAGPP,EAAAc,UAAAC,QAAP,WACEX,KAAKD,kBAAkBY,QAAQX,KAAKC,OAG/BL,EAAAc,UAAAE,YAAP,WACE,QAASZ,KAAKQ,SAASK,MAGlBjB,EAAAc,UAAAI,OAAP,SAAcC,QAAA,IAAAA,IAAAA,GAASf,KAAKG,aAC1BH,KAAKG,YAAcY,EAEfA,GACFf,KAAKD,kBAAkBiB,eAAehB,KAAKC,OAIxCL,EAAAc,UAAAO,cAAP,WACE,OAAOjB,KAAKQ,SAASK,MAGhBjB,EAAAc,UAAAQ,OAAP,WACE,OAAwB,MAAjBlB,KAAKmB,UAGPvB,EAAAc,UAAAU,UAAP,SAAiBC,GACfA,EAAMC,aAAaC,WAAa,QAG3B3B,EAAAc,UAAAc,UAAP,SAAiBH,GACfrB,KAAKyB,YAAa,GAGb7B,EAAAc,UAAAgB,UAAP,SAAiBL,GACfA,EAAMC,aAAaK,cAAgB,OACnC3B,KAAK4B,YAAa,EAClB5B,KAAKc,QAAO,GACZd,KAAKD,kBAAkB8B,iBAAmB7B,KAAKC,MAG1CL,EAAAc,UAAAoB,SAAP,SAAgBT,GAQd,OAPAA,EAAMU,iBAED/B,KAAK4B,aACR5B,KAAKyB,YAAa,GAGpBJ,EAAMC,aAAaC,WAAa,QACzB,GAGF3B,EAAAc,UAAAsB,QAAP,WACEhC,KAAKyB,YAAa,EAClBzB,KAAK4B,YAAa,GAGbhC,EAAAc,UAAAuB,KAAP,SAAYZ,GACVA,EAAMU,iBAEN,IAAM9B,EAAOD,KAAKD,kBAAkB8B,iBAGpC,OADA7B,KAAKD,kBAAkBmC,SAASjC,EAAMD,KAAKC,OACpC,GAGFL,EAAAc,UAAAyB,SAAP,WACE,IAAMC,EAAcpC,KAAKD,kBAAkBsC,QAAQrC,KAAKC,MAExDD,KAAKQ,SAAS8B,IAAIF,GAClBpC,KAAKc,QAAO,IAEhBlB,mBCrHA,SAAA2C,IAAA,IAAAC,EAAA,OAAAC,GAAAA,EAAAC,MAAA1C,KAAArB,YAAAqB,YACUwC,EAAAG,cAAe,IA8CzB,OF1BO,SAAmB9E,EAAGC,GAEzB,SAAS8E,IAAO5C,KAAK6C,YAAchF,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE6C,UAAkB,OAAN5C,EAAaC,OAAO+E,OAAOhF,IAAM8E,EAAGlC,UAAY5C,EAAE4C,UAAW,IAAIkC,GExBzCG,CAAAR,EAAAE,GAGxC1E,OAAAmB,eAAWqD,EAAA7B,UAAA,UAAO,KAAlB,WACE,OAAOV,KAAK2C,8CAGPJ,EAAA7B,UAAAuB,KAAP,SAAYZ,GACVA,EAAMU,iBAEN,IAAM9B,EAAOD,KAAKD,kBAAkB8B,iBAKpC,OAHA7B,KAAKD,kBAAkBiD,SAAS/C,GAChCD,KAAKiD,YAAc,YAEZ,GAGFV,EAAA7B,UAAAU,UAAP,SAAiBC,GACfA,EAAMC,aAAaC,WAAa,OAEhC,IAAMtB,EAAOD,KAAKD,kBAAkB8B,iBACvB7B,KAAKD,kBAAkBmD,QAAQjD,GAEnCkB,WACPnB,KAAKiD,YAAc,SAIhBV,EAAA7B,UAAAoB,SAAP,SAAgBT,GACdA,EAAMU,iBAEN,IAAM9B,EAAOD,KAAKD,kBAAkB8B,iBAC9BsB,EAAOnD,KAAKD,kBAAkBmD,QAAQjD,GAO5C,OALKD,KAAK4B,YAAcuB,EAAKhC,WAC3BnB,KAAKyB,YAAa,EAClBJ,EAAMC,aAAaC,WAAa,SAG3B,GAGFgB,EAAA7B,UAAAc,UAAP,SAAiBH,GACfrB,KAAKiD,YAAc,WACnBjD,KAAKyB,YAAa,GAEtBc,GA/C0C3C,gBCaxC,SAAAwD,EAAYC,EAAsBvD,GAAlC,IAAA0C,EAAAxC,KAAkCA,KAAAF,OAAAA,EAP1BE,KAAAsD,aAAe,CACrBL,YAAa,WACbzC,SAAU,GACVP,KAAM,GACNkB,SAAU,MAIVnB,KAAKuD,UAAY,IAAIC,IACrBH,EAAMI,SAAQ,SAAAC,GACZlB,EAAKe,UAAUI,IACbD,EAASzD,KACT,IAAIL,EAAgB8D,EAAU5D,EAAQ0C,EAAKzC,gBAAgB6D,KAAKpB,QAGpExC,KAAK6D,YACL7D,KAAK8D,UAAY9D,KAAK+D,SAEtB,IAAMZ,EAAO,CACXlD,KAAMD,KAAK8D,UACX3C,SAAU,OACVX,SAAU,GACVyC,YAAa,YAETe,EAAQ,IAAIzB,EAChBY,EACAnD,KAAKF,OACLE,KAAKD,gBAAgB6D,KAAK5D,OAG5BA,KAAKuD,UAAUI,IAAI3D,KAAK8D,UAAWE,GAiKvC,OA9JSZ,EAAA1C,UAAAuD,OAAP,WACE,OAAOjE,KAAKuD,UAAUU,UAGjBb,EAAA1C,UAAAwC,QAAP,SAAejD,GACb,OAAOD,KAAKuD,UAAUW,IAAIjE,IAGrBmD,EAAA1C,UAAAsC,SAAP,SAAgB/C,GACd,IAAMkD,EAAOnD,KAAKkD,QAAQjD,GACpB+D,EAAQhE,KAAKkD,QAAQlD,KAAK8D,YAEhCX,EAAKvB,YAAa,EAClBuB,EAAK1B,YAAa,EAEd0B,EAAKhC,WACQnB,KAAKkD,QAAQC,EAAKhC,UAC1BX,SAAS2D,OAAOlE,GAGzBkD,EAAKhC,SAAW,KAEhBnB,KAAK6D,YACLG,EAAMpC,YAAa,EACnBoC,EAAMvC,YAAa,GAGd2B,EAAA1C,UAAAwB,SAAP,SAAgBkC,EAAkBC,GAChC,IAAMC,EAAStE,KAAKkD,QAAQkB,GACtB7F,EAASyB,KAAKkD,QAAQmB,GAM5B,GAJAC,EAAO7C,YAAa,EACpB6C,EAAO1C,YAAa,EACpBrD,EAAOkD,YAAa,EAEhB6C,EAAOnD,WAAakD,GAAYD,IAAaC,EAAjD,CAIA,IAAME,EAAcD,EAAOpD,SAE3B,GAAIoD,EAAOnD,SAAU,CACnB,IAAMqD,EAASxE,KAAKkD,QAAQoB,EAAOnD,UAEnCqD,EAAOhE,SAAS2D,OAAOC,GAElBI,EAAO5D,eACV4D,EAAO1D,QAAO,GAIlBvC,EAAOiC,SAAS8B,IAAI8B,GACpBE,EAAOnD,SAAWkD,EAEdE,GACFvE,KAAK6D,YAGP7D,KAAKyE,cAGArB,EAAA1C,UAAAX,gBAAP,WACE,OAAOC,MAGFoD,EAAA1C,UAAAM,eAAP,SAAsBf,WAAtBuC,EAAAxC,KACQzB,EAASyB,KAAKkD,QAAQjD,GAE5B,GAAI1B,EAAO4C,SACMnB,KAAKkD,QAAQ3E,EAAO4C,UAE5BX,SAASiD,SAAQ,SAAAiB,GAClBA,IAAazE,GAIjBuC,EAAKU,QAAQwB,GAAU5D,QAAO,eAGhC,IAAmB,IAAA6D,EAAAxF,EAAAa,KAAK4E,OAAKC,EAAAF,EAAAlF,QAAAoF,EAAAlF,KAAAkF,EAAAF,EAAAlF,OAAE,CAA1B,IAAMqF,EAAID,EAAAnF,MACToF,EAAK7E,OAASA,GAIlB6E,EAAKhE,QAAO,uGAKXsC,EAAA1C,UAAA+D,UAAP,WACE,IAAMM,EAAM,GAaZ,OAXA/E,KAAKuD,UAAUE,SAAQ,SAACN,GACtB,IAAM6B,EAAY,CAChB/E,KAAMkD,EAAKlD,KACXgD,YAAaE,EAAKF,YAClB9B,SAAUgC,EAAKhC,SACfX,SAAUtC,MAAM+G,KAAK9B,EAAK3C,WAG5BuE,EAAIG,KAAKF,MAGJD,GAGF3B,EAAA1C,UAAAC,QAAP,SAAeV,GAAf,IAAAuC,EAAAxC,KACQzB,EAASyB,KAAKkD,QAAQjD,GAExB1B,EAAO4C,UACMnB,KAAKkD,QAAQ3E,EAAO4C,UAC5BX,SAAS2D,OAAOlE,GAGrB1B,EAAOqC,eACTrC,EAAOiC,SAASiD,SAAQ,SAAC0B,GACvB3C,EAAKe,UAAUY,OAAOgB,MAI1BnF,KAAKuD,UAAUY,OAAOlE,IAGjBmD,EAAA1C,UAAA2B,QAAP,SAAelB,QAAA,IAAAA,IAAAA,EAAA,MACb,IAAMmC,EAAevF,OAAOqH,OAAO,GAAIpF,KAAKsD,cAc5C,OAZAA,EAAarD,KAAOD,KAAK+D,SACzBT,EAAanC,SAAWA,EACxBnB,KAAKuD,UAAUI,IACbL,EAAarD,KACb,IAAIL,EACF0D,EACAtD,KAAKF,OACLE,KAAKD,gBAAgB6D,KAAK5D,QAG9BA,KAAK6D,YAEEP,EAAarD,MAGdmD,EAAA1C,UAAAqD,OAAR,WAEE,MAAO,uCAAuCsB,QAAQ,SAAS,SAAS3G,GAEtE,IAAMG,EAAqB,GAAhByG,KAAKC,SAAiB,EAIjC,OAFW,KAAL7G,EAAWG,EAAS,EAAJA,EAAW,GAExB2G,SAAS,QAIdpC,EAAA1C,UAAAmD,UAAR,WACE7D,KAAK4E,MAAQ1G,MAAM+G,KAAKjF,KAAKiE,UAAUwB,QAAO,SAACtC,GAC7C,OAAAA,EAAKjC,aAGXkC,kBCnMA,SAAAsC,KAwBA,OArBSA,EAAAhF,UAAAiF,UAAP,SAAiBtC,EAAcvD,GAG7B,OAFAE,KAAKuD,UAAY,IAAIH,EAAqBC,EAAOvD,GAE1CE,KAAKuD,WAGPmC,EAAAhF,UAAAwC,QAAP,SAAejD,GACb,OAAOD,KAAKuD,UAAUL,QAAQjD,IAGzByF,EAAAhF,UAAA2B,QAAP,WACErC,KAAKuD,UAAUlB,WAGVqD,EAAAhF,UAAAkF,UAAP,WACE,OAAO5F,KAAKuD,UAAUO,WAGjB4B,EAAAhF,UAAAmF,aAAP,WACE,OAAOC,KAAKC,UAAU/F,KAAKuD,UAAUkB,cAtB5BiB,EAAgBrH,EAAA,CAD5B2H,EAAAA,cACYN,mBC2BX,SAAAO,EACUC,EACAC,GADAnG,KAAAkG,SAAAA,EACAlG,KAAAmG,UAAAA,EApBFnG,KAAAF,OAAS,CACfM,UAAW,IACXE,WAAY,KAENN,KAAAoG,cAAe,EAEfpG,KAAAqG,KAAO,EACPrG,KAAAsG,MAAQ,EACRtG,KAAAuG,MAAQ,EAyElB,OAvEExI,OAAAmB,eAAW+G,EAAAvF,UAAA,gBAAa,KAAxB,WACE,OAAOV,KAAKwG,wBAGd,SAAyB9G,GACvBM,KAAKwG,mBAAqB9G,mCAQnB3B,OAAAmB,eAAI+G,EAAAvF,UAAA,OAAI,KAAR,SAAS+F,GACXA,GAASvI,MAAMwI,QAAQD,EAAKzB,QAIN,iBAAhByB,EAAK3G,SACdE,KAAKF,OAAS/B,OAAOqH,OAAOpF,KAAKF,OAAQ2G,EAAK3G,SAGhDE,KAAKqD,MAAQrD,KAAKkG,SAASP,UAAUc,EAAKzB,KAAMhF,KAAKF,0CAGvD/B,OAAAmB,eAAW+G,EAAAvF,UAAA,YAAS,KAApB,WACE,OAAOV,KAAKkG,SAASN,6CAGhBK,EAAAvF,UAAA2B,QAAP,WACErC,KAAKkG,SAAS7D,WAGT4D,EAAAvF,UAAAiG,YAAP,WACE3G,KAAKoG,cAAe,GAGfH,EAAAvF,UAAAkG,YAAP,SAAmBvF,GACjB,GAAIrB,KAAKoG,aAAc,CACb,IAAAS,EAAAxF,EAAAwF,UAAWC,EAAAzF,EAAAyF,UAEnB9G,KAAKsG,OAASO,EACd7G,KAAKuG,OAASO,EACd9G,KAAK+G,kBAIFd,EAAAvF,UAAAsG,UAAP,WACEhH,KAAKoG,cAAe,GAGfH,EAAAvF,UAAAqG,cAAP,WACE/G,KAAKiH,cAAgBjH,KAAKmG,UAAUe,yBAClC,aAAalH,KAAKsG,MAAK,OAAOtG,KAAKuG,MAAK,aAAavG,KAAKqG,KAAI,MAI3DJ,EAAAvF,UAAAyG,aAAP,SAAoB9F,GAClBA,EAAM+F,mBAGDnB,EAAAvF,UAAA2G,aAAP,SAAoBhG,GAClB,IAAIiG,EAEJjG,EAAMU,iBACNuF,EAAQjG,EAAMkG,QAAUlG,EAAMmG,WAC9BxH,KAAKqG,MAAQiB,EAAQ,IAAO,EAC5BtH,KAAKqG,KAAOf,KAAKmC,IAAInC,KAAKoC,IAAI1H,KAAKqG,KAAM,IAAM,GAE/CrG,KAAK+G,0DA5DarB,SACCiC,EAAAA,gBAGZtJ,EAAA,CAARuJ,EAAAA,kCAzBU3B,EAAa5H,EAAA,CANzBwJ,EAAAA,UAAU,CAETC,SAAU,eAEVC,SAAA,82CAEW9B,mBCOX,SAAA+B,EACU9B,EACAC,GADAnG,KAAAkG,SAAAA,EACAlG,KAAAmG,UAAAA,EAERnG,KAAKiI,MAAyE,QAAjEC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,OA0BvE,OAvBWrK,OAAAmB,eAAI8I,EAAAtH,UAAA,SAAM,KAAV,SAAWT,GAClBD,KAAKmD,KAAOnD,KAAKkG,SAAShD,QAAQjD,GAElC,IAAIoI,EAAc,yBAAyB/C,KAAKgD,MAC9CtI,KAAKmD,KAAK9C,MAAQ,GACnB,aAEGL,KAAKiI,QACPI,EAAc,wBAAwB/C,KAAKgD,MACzCtI,KAAKmD,KAAK9C,MAAQ,GACnB,cAGHL,KAAKuI,kBAAoBvI,KAAKmG,UAAUe,yBACtCmB,oCAIJL,EAAAtH,UAAA8H,WAAA,SAAWnH,EAAOoH,GACHzI,KAAKkG,SAAShD,QAAQuF,GAE9BxF,YAAc5B,EAAM9C,OAAOmK,oDA3BdhD,SACCiC,EAAAA,gBAKZtJ,EAAA,CAARuJ,EAAAA,oCAZUI,EAAa3J,EAAA,CANzBwJ,EAAAA,UAAU,CAETC,SAAU,oBAEVC,SAAA,q2KAEWC,mBCUb,SAAAW,KAEA,OAFaA,EAAiBtK,EAAA,CAhB7BuK,EAAAA,SAAS,CACNC,aAAc,CACV5C,EACA+B,GAEJc,QAAS,CACLC,EAAAA,cAEJC,QAAS,CACL/C,EACA+B,GAEJiB,UAAW,CACPvD,MAGKiD","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TreeDiagramNodesList } from './nodes-list.class';\n\nexport class TreeDiagramNode {\n  public parentId: string | null;\n  public guid: string;\n  public width: number;\n  public height: number;\n  public isDragover: boolean;\n  public isDragging: boolean;\n  public children: Set<string>;\n  public displayName: string;\n  private toggleState: boolean;\n\n  public get isMaker() {\n    return false;\n  }\n\n  constructor(\n    props,\n    config,\n    public getThisNodeList: () => TreeDiagramNodesList\n  ) {\n    if (!props.guid) {\n      return;\n    }\n\n    for (const prop in props) {\n      if (props.hasOwnProperty(prop)) {\n        this[prop] = props[prop];\n      }\n    }\n\n    this.toggleState = false;\n\n    if (config.nodeWidth) {\n      this.width = config.nodeWidth;\n    }\n\n    if (config.nodeHeight) {\n      this.height = config.nodeHeight;\n    }\n\n    this.children = new Set(props.children as string[]);\n  }\n\n  public get isExpanded() {\n    return this.toggleState;\n  }\n\n  public destroy() {\n    this.getThisNodeList().destroy(this.guid);\n  }\n\n  public hasChildren() {\n    return !!this.children.size;\n  }\n\n  public toggle(state = !this.toggleState) {\n    this.toggleState = state;\n\n    if (state) {\n      this.getThisNodeList().toggleSiblings(this.guid);\n    }\n  }\n\n  public childrenCount() {\n    return this.children.size;\n  }\n\n  public isRoot() {\n    return this.parentId == null;\n  }\n\n  public dragenter(event) {\n    event.dataTransfer.dropEffect = 'move';\n  }\n\n  public dragleave(event) {\n    this.isDragover = false;\n  }\n\n  public dragstart(event) {\n    event.dataTransfer.effectAllowed = 'move';\n    this.isDragging = true;\n    this.toggle(false);\n    this.getThisNodeList().draggingNodeGuid = this.guid;\n  }\n\n  public dragover(event) {\n    event.preventDefault();\n\n    if (!this.isDragging) {\n      this.isDragover = true;\n    }\n\n    event.dataTransfer.dropEffect = 'move';\n    return false;\n  }\n\n  public dragend() {\n    this.isDragover = false;\n    this.isDragging = false;\n  }\n\n  public drop(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n\n    this.getThisNodeList().transfer(guid, this.guid);\n    return false;\n  }\n\n  public addChild() {\n    const newNodeGuid = this.getThisNodeList().newNode(this.guid);\n\n    this.children.add(newNodeGuid);\n    this.toggle(true);\n  }\n}\n","import { TreeDiagramNode } from './node.class';\n\nexport class TreeDiagramNodeMaker extends TreeDiagramNode {\n  private isMakerState = true;\n\n  public get isMaker() {\n    return this.isMakerState;\n  }\n\n  public drop(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n\n    this.getThisNodeList().rootNode(guid);\n    this.displayName = 'New node';\n\n    return false;\n  }\n\n  public dragenter(event) {\n    event.dataTransfer.dropEffect = 'move';\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n    const node = this.getThisNodeList().getNode(guid);\n\n    if (node.parentId) {\n      this.displayName = 'Root';\n    }\n  }\n\n  public dragover(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n    const node = this.getThisNodeList().getNode(guid);\n\n    if (!this.isDragging && node.parentId) {\n      this.isDragover = true;\n      event.dataTransfer.dropEffect = 'move';\n    }\n\n    return false;\n  }\n\n  public dragleave(event) {\n    this.displayName = 'New node';\n    this.isDragover = false;\n  }\n}\n","import { TreeDiagramNode } from './node.class';\nimport { TreeDiagramNodeMaker } from './node-maker.class';\n\nexport class TreeDiagramNodesList {\n  public roots: TreeDiagramNode[];\n  public makerGuid: string;\n  public draggingNodeGuid;\n  private nodesList: Map<string, TreeDiagramNode>;\n  private nodeTemplate = {\n    displayName: 'New node',\n    children: [],\n    guid: '',\n    parentId: null\n  };\n\n  constructor(nodes: any[], private config) {\n    this.nodesList = new Map();\n    nodes.forEach(treeNode => {\n      this.nodesList.set(\n        treeNode.guid,\n        new TreeDiagramNode(treeNode, config, this.getThisNodeList.bind(this))\n      );\n    });\n    this.makeRoots();\n    this.makerGuid = this.uuidv4();\n\n    const node = {\n      guid: this.makerGuid,\n      parentId: 'root',\n      children: [],\n      displayName: 'New node'\n    };\n    const maker = new TreeDiagramNodeMaker(\n      node,\n      this.config,\n      this.getThisNodeList.bind(this)\n    );\n\n    this.nodesList.set(this.makerGuid, maker);\n  }\n\n  public values() {\n    return this.nodesList.values();\n  }\n\n  public getNode(guid: string): TreeDiagramNode {\n    return this.nodesList.get(guid);\n  }\n\n  public rootNode(guid: string) {\n    const node = this.getNode(guid);\n    const maker = this.getNode(this.makerGuid);\n\n    node.isDragging = false;\n    node.isDragover = false;\n\n    if (node.parentId) {\n      const parent = this.getNode(node.parentId);\n      parent.children.delete(guid);\n    }\n\n    node.parentId = null;\n\n    this.makeRoots();\n    maker.isDragging = false;\n    maker.isDragover = false;\n  }\n\n  public transfer(originId: string, targetId: string) {\n    const origin = this.getNode(originId);\n    const target = this.getNode(targetId);\n\n    origin.isDragover = false;\n    origin.isDragging = false;\n    target.isDragover = false;\n\n    if (origin.parentId === targetId || originId === targetId) {\n      return;\n    }\n\n    const remakeRoots = origin.isRoot();\n\n    if (origin.parentId) {\n      const parent = this.getNode(origin.parentId);\n\n      parent.children.delete(originId);\n\n      if (!parent.hasChildren()) {\n        parent.toggle(false);\n      }\n    }\n\n    target.children.add(originId);\n    origin.parentId = targetId;\n\n    if (remakeRoots) {\n      this.makeRoots();\n    }\n\n    this.serialize();\n  }\n\n  public getThisNodeList() {\n    return this;\n  }\n\n  public toggleSiblings(guid: string) {\n    const target = this.getNode(guid);\n\n    if (target.parentId) {\n      const parent = this.getNode(target.parentId);\n\n      parent.children.forEach(nodeGuid => {\n        if (nodeGuid === guid) {\n          return;\n        }\n\n        this.getNode(nodeGuid).toggle(false);\n      });\n    } else {\n      for (const root of this.roots) {\n        if (root.guid === guid) {\n          continue;\n        }\n\n        root.toggle(false);\n      }\n    }\n  }\n\n  public serialize() {\n    const out = [];\n\n    this.nodesList.forEach((node: TreeDiagramNode) => {\n      const json: any = {\n        guid: node.guid,\n        displayName: node.displayName,\n        parentId: node.parentId,\n        children: Array.from(node.children),\n      };\n\n      out.push(json);\n    });\n\n    return out;\n  }\n\n  public destroy(guid: string) {\n    const target = this.getNode(guid);\n\n    if (target.parentId) {\n      const parent = this.getNode(target.parentId);\n      parent.children.delete(guid);\n    }\n\n    if (target.hasChildren()) {\n      target.children.forEach((child: string) => {\n        this.nodesList.delete(child);\n      });\n    }\n\n    this.nodesList.delete(guid);\n  }\n\n  public newNode(parentId = null) {\n    const nodeTemplate = Object.assign({}, this.nodeTemplate);\n\n    nodeTemplate.guid = this.uuidv4();\n    nodeTemplate.parentId = parentId;\n    this.nodesList.set(\n      nodeTemplate.guid,\n      new TreeDiagramNode(\n        nodeTemplate,\n        this.config,\n        this.getThisNodeList.bind(this)\n      )\n    );\n    this.makeRoots();\n\n    return nodeTemplate.guid;\n  }\n\n  private uuidv4() {\n    // tslint:disable-next-line:only-arrow-functions\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      // tslint:disable-next-line:one-variable-per-declaration no-bitwise\n      const r = (Math.random() * 16) | 0,\n        // tslint:disable-next-line:triple-equals no-bitwise\n        v = c == 'x' ? r : (r & 0x3) | 0x8;\n\n      return v.toString(16);\n    });\n  }\n\n  private makeRoots() {\n    this.roots = Array.from(this.values()).filter((node: TreeDiagramNode) =>\n      node.isRoot()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TreeDiagramNodesList } from '../classes';\n\n@Injectable()\nexport class NodesListService {\n  private nodesList: TreeDiagramNodesList;\n\n  public loadNodes(nodes: any[], config) {\n    this.nodesList = new TreeDiagramNodesList(nodes, config);\n\n    return this.nodesList;\n  }\n\n  public getNode(guid) {\n    return this.nodesList.getNode(guid);\n  }\n\n  public newNode() {\n    this.nodesList.newNode();\n  }\n\n  public makerNode() {\n    return this.nodesList.makerGuid;\n  }\n\n  public toJsonString() {\n    return JSON.stringify(this.nodesList.serialize());\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { NodesListService } from './services/nodes-list.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tree-diagram',\n  styleUrls: ['./tree.component.scss'],\n  templateUrl: './tree.component.html'\n})\nexport class TreeComponent {\n  public nodes;\n  private config = {\n    nodeWidth: 200,\n    nodeHeight: 100\n  };\n  private paneDragging = false;\n  private paneTransformState;\n  private zoom = 1;\n  private paneX = 0;\n  private paneY = 0;\n\n  public get paneTransform() {\n    return this.paneTransformState;\n  }\n\n  public set paneTransform(value) {\n    this.paneTransformState = value;\n  }\n\n  constructor(\n    private nodesSrv: NodesListService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  @Input() set data(data: { config: any; json: any[] }) {\n    if (!data || !Array.isArray(data.json)) {\n      return;\n    }\n\n    if (typeof data.config === 'object') {\n      this.config = Object.assign(this.config, data.config);\n    }\n\n    this.nodes = this.nodesSrv.loadNodes(data.json, this.config);\n  }\n\n  public get nodeMaker() {\n    return this.nodesSrv.makerNode();\n  }\n\n  public newNode() {\n    this.nodesSrv.newNode();\n  }\n\n  public onmousedown() {\n    this.paneDragging = true;\n  }\n\n  public onmousemove(event) {\n    if (this.paneDragging) {\n      const { movementX, movementY } = event;\n\n      this.paneX += movementX;\n      this.paneY += movementY;\n      this.makeTransform();\n    }\n  }\n\n  public onmouseup() {\n    this.paneDragging = false;\n  }\n\n  public makeTransform() {\n    this.paneTransform = this.sanitizer.bypassSecurityTrustStyle(\n      `translate(${this.paneX}px, ${this.paneY}px) scale(${this.zoom})`\n    );\n  }\n\n  public preventMouse(event) {\n    event.stopPropagation();\n  }\n\n  public onmousewheel(event) {\n    let delta;\n\n    event.preventDefault();\n    delta = event.detail || event.wheelDelta;\n    this.zoom += delta / 1000 / 2;\n    this.zoom = Math.min(Math.max(this.zoom, 0.2), 3);\n\n    this.makeTransform();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { NodesListService } from '../services/nodes-list.service';\nimport { TreeDiagramNode } from '../classes/node.class';\nimport { TreeDiagramNodeMaker } from '../classes/node-maker.class';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tree-diagram-node',\n  styleUrls: ['./node.component.scss'],\n  templateUrl: './node.component.html'\n})\nexport class NodeComponent {\n  public node: TreeDiagramNode | TreeDiagramNodeMaker;\n  public childrenTransform;\n  private readonly isRtl: boolean;\n\n  constructor(\n    private nodesSrv: NodesListService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.isRtl = document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl';\n  }\n\n  @Input() set nodeId(guid) {\n    this.node = this.nodesSrv.getNode(guid);\n\n    let calculation = `translate(calc(-50% + ${Math.round(\n      this.node.width / 2\n    )}px), 45px)`;\n\n    if (this.isRtl) {\n      calculation = `translate(calc(50% - ${Math.round(\n        this.node.width / 2\n      )}px), 45px)`;\n    }\n\n    this.childrenTransform = this.sanitizer.bypassSecurityTrustStyle(\n      calculation\n    );\n  }\n\n  onNodeBlur(event, nodeId) {\n    const node = this.nodesSrv.getNode(nodeId);\n\n    node.displayName = event.target.innerText;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TreeComponent } from './tree.component';\nimport { NodeComponent } from './node';\nimport { NodesListService } from './services/nodes-list.service';\n\n@NgModule({\n    declarations: [\n        TreeComponent,\n        NodeComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TreeComponent,\n        NodeComponent\n    ],\n    providers: [\n        NodesListService\n    ]\n})\nexport class TreeDiagramModule {\n\n}\n"]}
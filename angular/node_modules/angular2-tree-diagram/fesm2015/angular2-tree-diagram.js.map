{"version":3,"file":"angular2-tree-diagram.js","sources":["ng://angular2-tree-diagram/lib/classes/node.class.ts","ng://angular2-tree-diagram/lib/classes/node-maker.class.ts","ng://angular2-tree-diagram/lib/classes/nodes-list.class.ts","ng://angular2-tree-diagram/lib/services/nodes-list.service.ts","ng://angular2-tree-diagram/lib/tree.component.ts","ng://angular2-tree-diagram/lib/node/node.component.ts","ng://angular2-tree-diagram/lib/tree.module.ts","ng://angular2-tree-diagram/ng-tree-diagram.ts","ng://angular2-tree-diagram/angular2-tree-diagram.ts"],"sourcesContent":["import { TreeDiagramNodesList } from './nodes-list.class';\n\nexport class TreeDiagramNode {\n  public parentId: string | null;\n  public guid: string;\n  public width: number;\n  public height: number;\n  public isDragover: boolean;\n  public isDragging: boolean;\n  public children: Set<string>;\n  public displayName: string;\n  private toggleState: boolean;\n\n  public get isMaker() {\n    return false;\n  }\n\n  constructor(\n    props,\n    config,\n    public getThisNodeList: () => TreeDiagramNodesList\n  ) {\n    if (!props.guid) {\n      return;\n    }\n\n    for (const prop in props) {\n      if (props.hasOwnProperty(prop)) {\n        this[prop] = props[prop];\n      }\n    }\n\n    this.toggleState = false;\n\n    if (config.nodeWidth) {\n      this.width = config.nodeWidth;\n    }\n\n    if (config.nodeHeight) {\n      this.height = config.nodeHeight;\n    }\n\n    this.children = new Set(props.children as string[]);\n  }\n\n  public get isExpanded() {\n    return this.toggleState;\n  }\n\n  public destroy() {\n    this.getThisNodeList().destroy(this.guid);\n  }\n\n  public hasChildren() {\n    return !!this.children.size;\n  }\n\n  public toggle(state = !this.toggleState) {\n    this.toggleState = state;\n\n    if (state) {\n      this.getThisNodeList().toggleSiblings(this.guid);\n    }\n  }\n\n  public childrenCount() {\n    return this.children.size;\n  }\n\n  public isRoot() {\n    return this.parentId == null;\n  }\n\n  public dragenter(event) {\n    event.dataTransfer.dropEffect = 'move';\n  }\n\n  public dragleave(event) {\n    this.isDragover = false;\n  }\n\n  public dragstart(event) {\n    event.dataTransfer.effectAllowed = 'move';\n    this.isDragging = true;\n    this.toggle(false);\n    this.getThisNodeList().draggingNodeGuid = this.guid;\n  }\n\n  public dragover(event) {\n    event.preventDefault();\n\n    if (!this.isDragging) {\n      this.isDragover = true;\n    }\n\n    event.dataTransfer.dropEffect = 'move';\n    return false;\n  }\n\n  public dragend() {\n    this.isDragover = false;\n    this.isDragging = false;\n  }\n\n  public drop(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n\n    this.getThisNodeList().transfer(guid, this.guid);\n    return false;\n  }\n\n  public addChild() {\n    const newNodeGuid = this.getThisNodeList().newNode(this.guid);\n\n    this.children.add(newNodeGuid);\n    this.toggle(true);\n  }\n}\n","import { TreeDiagramNode } from './node.class';\n\nexport class TreeDiagramNodeMaker extends TreeDiagramNode {\n  private isMakerState = true;\n\n  public get isMaker() {\n    return this.isMakerState;\n  }\n\n  public drop(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n\n    this.getThisNodeList().rootNode(guid);\n    this.displayName = 'New node';\n\n    return false;\n  }\n\n  public dragenter(event) {\n    event.dataTransfer.dropEffect = 'move';\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n    const node = this.getThisNodeList().getNode(guid);\n\n    if (node.parentId) {\n      this.displayName = 'Root';\n    }\n  }\n\n  public dragover(event) {\n    event.preventDefault();\n\n    const guid = this.getThisNodeList().draggingNodeGuid;\n    const node = this.getThisNodeList().getNode(guid);\n\n    if (!this.isDragging && node.parentId) {\n      this.isDragover = true;\n      event.dataTransfer.dropEffect = 'move';\n    }\n\n    return false;\n  }\n\n  public dragleave(event) {\n    this.displayName = 'New node';\n    this.isDragover = false;\n  }\n}\n","import { TreeDiagramNode } from './node.class';\nimport { TreeDiagramNodeMaker } from './node-maker.class';\n\nexport class TreeDiagramNodesList {\n  public roots: TreeDiagramNode[];\n  public makerGuid: string;\n  public draggingNodeGuid;\n  private nodesList: Map<string, TreeDiagramNode>;\n  private nodeTemplate = {\n    displayName: 'New node',\n    children: [],\n    guid: '',\n    parentId: null\n  };\n\n  constructor(nodes: any[], private config) {\n    this.nodesList = new Map();\n    nodes.forEach(treeNode => {\n      this.nodesList.set(\n        treeNode.guid,\n        new TreeDiagramNode(treeNode, config, this.getThisNodeList.bind(this))\n      );\n    });\n    this.makeRoots();\n    this.makerGuid = this.uuidv4();\n\n    const node = {\n      guid: this.makerGuid,\n      parentId: 'root',\n      children: [],\n      displayName: 'New node'\n    };\n    const maker = new TreeDiagramNodeMaker(\n      node,\n      this.config,\n      this.getThisNodeList.bind(this)\n    );\n\n    this.nodesList.set(this.makerGuid, maker);\n  }\n\n  public values() {\n    return this.nodesList.values();\n  }\n\n  public getNode(guid: string): TreeDiagramNode {\n    return this.nodesList.get(guid);\n  }\n\n  public rootNode(guid: string) {\n    const node = this.getNode(guid);\n    const maker = this.getNode(this.makerGuid);\n\n    node.isDragging = false;\n    node.isDragover = false;\n\n    if (node.parentId) {\n      const parent = this.getNode(node.parentId);\n      parent.children.delete(guid);\n    }\n\n    node.parentId = null;\n\n    this.makeRoots();\n    maker.isDragging = false;\n    maker.isDragover = false;\n  }\n\n  public transfer(originId: string, targetId: string) {\n    const origin = this.getNode(originId);\n    const target = this.getNode(targetId);\n\n    origin.isDragover = false;\n    origin.isDragging = false;\n    target.isDragover = false;\n\n    if (origin.parentId === targetId || originId === targetId) {\n      return;\n    }\n\n    const remakeRoots = origin.isRoot();\n\n    if (origin.parentId) {\n      const parent = this.getNode(origin.parentId);\n\n      parent.children.delete(originId);\n\n      if (!parent.hasChildren()) {\n        parent.toggle(false);\n      }\n    }\n\n    target.children.add(originId);\n    origin.parentId = targetId;\n\n    if (remakeRoots) {\n      this.makeRoots();\n    }\n\n    this.serialize();\n  }\n\n  public getThisNodeList() {\n    return this;\n  }\n\n  public toggleSiblings(guid: string) {\n    const target = this.getNode(guid);\n\n    if (target.parentId) {\n      const parent = this.getNode(target.parentId);\n\n      parent.children.forEach(nodeGuid => {\n        if (nodeGuid === guid) {\n          return;\n        }\n\n        this.getNode(nodeGuid).toggle(false);\n      });\n    } else {\n      for (const root of this.roots) {\n        if (root.guid === guid) {\n          continue;\n        }\n\n        root.toggle(false);\n      }\n    }\n  }\n\n  public serialize() {\n    const out = [];\n\n    this.nodesList.forEach((node: TreeDiagramNode) => {\n      const json: any = {\n        guid: node.guid,\n        displayName: node.displayName,\n        parentId: node.parentId,\n        children: Array.from(node.children),\n      };\n\n      out.push(json);\n    });\n\n    return out;\n  }\n\n  public destroy(guid: string) {\n    const target = this.getNode(guid);\n\n    if (target.parentId) {\n      const parent = this.getNode(target.parentId);\n      parent.children.delete(guid);\n    }\n\n    if (target.hasChildren()) {\n      target.children.forEach((child: string) => {\n        this.nodesList.delete(child);\n      });\n    }\n\n    this.nodesList.delete(guid);\n  }\n\n  public newNode(parentId = null) {\n    const nodeTemplate = Object.assign({}, this.nodeTemplate);\n\n    nodeTemplate.guid = this.uuidv4();\n    nodeTemplate.parentId = parentId;\n    this.nodesList.set(\n      nodeTemplate.guid,\n      new TreeDiagramNode(\n        nodeTemplate,\n        this.config,\n        this.getThisNodeList.bind(this)\n      )\n    );\n    this.makeRoots();\n\n    return nodeTemplate.guid;\n  }\n\n  private uuidv4() {\n    // tslint:disable-next-line:only-arrow-functions\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      // tslint:disable-next-line:one-variable-per-declaration no-bitwise\n      const r = (Math.random() * 16) | 0,\n        // tslint:disable-next-line:triple-equals no-bitwise\n        v = c == 'x' ? r : (r & 0x3) | 0x8;\n\n      return v.toString(16);\n    });\n  }\n\n  private makeRoots() {\n    this.roots = Array.from(this.values()).filter((node: TreeDiagramNode) =>\n      node.isRoot()\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TreeDiagramNodesList } from '../classes';\n\n@Injectable()\nexport class NodesListService {\n  private nodesList: TreeDiagramNodesList;\n\n  public loadNodes(nodes: any[], config) {\n    this.nodesList = new TreeDiagramNodesList(nodes, config);\n\n    return this.nodesList;\n  }\n\n  public getNode(guid) {\n    return this.nodesList.getNode(guid);\n  }\n\n  public newNode() {\n    this.nodesList.newNode();\n  }\n\n  public makerNode() {\n    return this.nodesList.makerGuid;\n  }\n\n  public toJsonString() {\n    return JSON.stringify(this.nodesList.serialize());\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { NodesListService } from './services/nodes-list.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tree-diagram',\n  styleUrls: ['./tree.component.scss'],\n  templateUrl: './tree.component.html'\n})\nexport class TreeComponent {\n  public nodes;\n  private config = {\n    nodeWidth: 200,\n    nodeHeight: 100\n  };\n  private paneDragging = false;\n  private paneTransformState;\n  private zoom = 1;\n  private paneX = 0;\n  private paneY = 0;\n\n  public get paneTransform() {\n    return this.paneTransformState;\n  }\n\n  public set paneTransform(value) {\n    this.paneTransformState = value;\n  }\n\n  constructor(\n    private nodesSrv: NodesListService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  @Input() set data(data: { config: any; json: any[] }) {\n    if (!data || !Array.isArray(data.json)) {\n      return;\n    }\n\n    if (typeof data.config === 'object') {\n      this.config = Object.assign(this.config, data.config);\n    }\n\n    this.nodes = this.nodesSrv.loadNodes(data.json, this.config);\n  }\n\n  public get nodeMaker() {\n    return this.nodesSrv.makerNode();\n  }\n\n  public newNode() {\n    this.nodesSrv.newNode();\n  }\n\n  public onmousedown() {\n    this.paneDragging = true;\n  }\n\n  public onmousemove(event) {\n    if (this.paneDragging) {\n      const { movementX, movementY } = event;\n\n      this.paneX += movementX;\n      this.paneY += movementY;\n      this.makeTransform();\n    }\n  }\n\n  public onmouseup() {\n    this.paneDragging = false;\n  }\n\n  public makeTransform() {\n    this.paneTransform = this.sanitizer.bypassSecurityTrustStyle(\n      `translate(${this.paneX}px, ${this.paneY}px) scale(${this.zoom})`\n    );\n  }\n\n  public preventMouse(event) {\n    event.stopPropagation();\n  }\n\n  public onmousewheel(event) {\n    let delta;\n\n    event.preventDefault();\n    delta = event.detail || event.wheelDelta;\n    this.zoom += delta / 1000 / 2;\n    this.zoom = Math.min(Math.max(this.zoom, 0.2), 3);\n\n    this.makeTransform();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { NodesListService } from '../services/nodes-list.service';\nimport { TreeDiagramNode } from '../classes/node.class';\nimport { TreeDiagramNodeMaker } from '../classes/node-maker.class';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tree-diagram-node',\n  styleUrls: ['./node.component.scss'],\n  templateUrl: './node.component.html'\n})\nexport class NodeComponent {\n  public node: TreeDiagramNode | TreeDiagramNodeMaker;\n  public childrenTransform;\n  private readonly isRtl: boolean;\n\n  constructor(\n    private nodesSrv: NodesListService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.isRtl = document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl';\n  }\n\n  @Input() set nodeId(guid) {\n    this.node = this.nodesSrv.getNode(guid);\n\n    let calculation = `translate(calc(-50% + ${Math.round(\n      this.node.width / 2\n    )}px), 45px)`;\n\n    if (this.isRtl) {\n      calculation = `translate(calc(50% - ${Math.round(\n        this.node.width / 2\n      )}px), 45px)`;\n    }\n\n    this.childrenTransform = this.sanitizer.bypassSecurityTrustStyle(\n      calculation\n    );\n  }\n\n  onNodeBlur(event, nodeId) {\n    const node = this.nodesSrv.getNode(nodeId);\n\n    node.displayName = event.target.innerText;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TreeComponent } from './tree.component';\nimport { NodeComponent } from './node';\nimport { NodesListService } from './services/nodes-list.service';\n\n@NgModule({\n    declarations: [\n        TreeComponent,\n        NodeComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TreeComponent,\n        NodeComponent\n    ],\n    providers: [\n        NodesListService\n    ]\n})\nexport class TreeDiagramModule {\n\n}\n","/*\n * Public API Surface of ng-tree-diagram\n */\n\nexport * from './lib/tree.module';\nexport * from './lib/services/nodes-list.service';\nexport * from './lib/node';\nexport * from './lib/classes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './ng-tree-diagram';\n\nexport {TreeComponent as ɵa} from './lib/tree.component';"],"names":[],"mappings":";;;;;MAEa,eAAe;IAe1B,YACE,KAAK,EACL,MAAM,EACC,eAA2C;QAA3C,oBAAe,GAAf,eAAe,CAA4B;QAElD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACf,OAAO;SACR;QAED,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;QAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,MAAM,CAAC,SAAS,EAAE;YACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;SAC/B;QAED,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;SACjC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,QAAoB,CAAC,CAAC;KACrD;IA9BD,IAAW,OAAO;QAChB,OAAO,KAAK,CAAC;KACd;IA8BD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAEM,OAAO;QACZ,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3C;IAEM,WAAW;QAChB,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;KAC7B;IAEM,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW;QACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,eAAe,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClD;KACF;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;KAC3B;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;KAC9B;IAEM,SAAS,CAAC,KAAK;QACpB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;KACxC;IAEM,SAAS,CAAC,KAAK;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAEM,SAAS,CAAC,KAAK;QACpB,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,MAAM,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;KACrD;IAEM,QAAQ,CAAC,KAAK;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QAED,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QACvC,OAAO,KAAK,CAAC;KACd;IAEM,OAAO;QACZ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAEM,IAAI,CAAC,KAAK;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAC;QAErD,IAAI,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC;KACd;IAEM,QAAQ;QACb,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnB;;;MCpHU,oBAAqB,SAAQ,eAAe;IAAzD;;QACU,iBAAY,GAAG,IAAI,CAAC;KA8C7B;IA5CC,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEM,IAAI,CAAC,KAAK;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAC;QAErD,IAAI,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAE9B,OAAO,KAAK,CAAC;KACd;IAEM,SAAS,CAAC,KAAK;QACpB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QAEvC,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAC;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC3B;KACF;IAEM,QAAQ,CAAC,KAAK;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,gBAAgB,CAAC;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElD,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;SACxC;QAED,OAAO,KAAK,CAAC;KACd;IAEM,SAAS,CAAC,KAAK;QACpB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;CACF;;MC9CY,oBAAoB;IAY/B,YAAY,KAAY,EAAU,MAAM;QAAN,WAAM,GAAN,MAAM,CAAA;QAPhC,iBAAY,GAAG;YACrB,WAAW,EAAE,UAAU;YACvB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,IAAI;SACf,CAAC;QAGA,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,KAAK,CAAC,OAAO,CAAC,QAAQ;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAChB,QAAQ,CAAC,IAAI,EACb,IAAI,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACvE,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAE/B,MAAM,IAAI,GAAG;YACX,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,UAAU;SACxB,CAAC;QACF,MAAM,KAAK,GAAG,IAAI,oBAAoB,CACpC,IAAI,EACJ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAC3C;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;KAChC;IAEM,OAAO,CAAC,IAAY;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACjC;IAEM,QAAQ,CAAC,IAAY;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;KAC1B;IAEM,QAAQ,CAAC,QAAgB,EAAE,QAAgB;QAChD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEtC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAE1B,IAAI,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzD,OAAO;SACR;QAED,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAEpC,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE7C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAEjC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;gBACzB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACtB;SACF;QAED,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE3B,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC;KACb;IAEM,cAAc,CAAC,IAAY;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE7C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ;gBAC9B,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACtC,CAAC,CAAC;SACJ;aAAM;YACL,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,SAAS;iBACV;gBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACpB;SACF;KACF;IAEM,SAAS;QACd,MAAM,GAAG,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAqB;YAC3C,MAAM,IAAI,GAAQ;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpC,CAAC;YAEF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChB,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;KACZ;IAEM,OAAO,CAAC,IAAY;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;YACxB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAa;gBACpC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9B,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7B;IAEM,OAAO,CAAC,QAAQ,GAAG,IAAI;QAC5B,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAE1D,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAClC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAChB,YAAY,CAAC,IAAI,EACjB,IAAI,eAAe,CACjB,YAAY,EACZ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,CACF,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,OAAO,YAAY,CAAC,IAAI,CAAC;KAC1B;IAEO,MAAM;;QAEZ,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;;YAEvE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;;YAEhC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC;YAErC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAC;KACJ;IAEO,SAAS;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAqB,KAClE,IAAI,CAAC,MAAM,EAAE,CACd,CAAC;KACH;CACF;;ICnMY,gBAAgB,GAA7B,MAAa,gBAAgB;IAGpB,SAAS,CAAC,KAAY,EAAE,MAAM;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAEM,OAAO,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACrC;IAEM,OAAO;QACZ,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;KAC1B;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;KACjC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;KACnD;CACF,CAAA;AAxBY,gBAAgB;IAD5B,UAAU,EAAE;GACA,gBAAgB,CAwB5B;;ICjBY,aAAa,GAA1B,MAAa,aAAa;IAoBxB,YACU,QAA0B,EAC1B,SAAuB;QADvB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,cAAS,GAAT,SAAS,CAAc;QApBzB,WAAM,GAAG;YACf,SAAS,EAAE,GAAG;YACd,UAAU,EAAE,GAAG;SAChB,CAAC;QACM,iBAAY,GAAG,KAAK,CAAC;QAErB,SAAI,GAAG,CAAC,CAAC;QACT,UAAK,GAAG,CAAC,CAAC;QACV,UAAK,GAAG,CAAC,CAAC;KAad;IAXJ,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,IAAW,aAAa,CAAC,KAAK;QAC5B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;KACjC;IAOQ,IAAI,IAAI,CAAC,IAAkC;QAClD,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACtC,OAAO;SACR;QAED,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YACnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9D;IAED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KAClC;IAEM,OAAO;QACZ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KACzB;IAEM,WAAW;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;IAEM,WAAW,CAAC,KAAK;QACtB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;YAEvC,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;YACxB,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAEM,SAAS;QACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAEM,aAAa;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAC1D,aAAa,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,aAAa,IAAI,CAAC,IAAI,GAAG,CAClE,CAAC;KACH;IAEM,YAAY,CAAC,KAAK;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAEM,YAAY,CAAC,KAAK;QACvB,IAAI,KAAK,CAAC;QAEV,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAElD,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;CACF,CAAA;;YA9DqB,gBAAgB;YACf,YAAY;;AAGxB;IAAR,KAAK,EAAE;yCAUP;AAnCU,aAAa;IANzB,SAAS,CAAC;;QAET,QAAQ,EAAE,cAAc;QAExB,qxBAAoC;;KACrC,CAAC;GACW,aAAa,CAmFzB;;ICjFY,aAAa,GAA1B,MAAa,aAAa;IAKxB,YACU,QAA0B,EAC1B,SAAuB;QADvB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,cAAS,GAAT,SAAS,CAAc;QAE/B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;KACrF;IAEQ,IAAI,MAAM,CAAC,IAAI;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,WAAW,GAAG,yBAAyB,IAAI,CAAC,KAAK,CACnD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CACpB,YAAY,CAAC;QAEd,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,WAAW,GAAG,wBAAwB,IAAI,CAAC,KAAK,CAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CACpB,YAAY,CAAC;SACf;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAC9D,WAAW,CACZ,CAAC;KACH;IAED,UAAU,CAAC,KAAK,EAAE,MAAM;QACtB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;KAC3C;CACF,CAAA;;YA7BqB,gBAAgB;YACf,YAAY;;AAKxB;IAAR,KAAK,EAAE;2CAgBP;AA5BU,aAAa;IANzB,SAAS,CAAC;;QAET,QAAQ,EAAE,mBAAmB;QAE7B,y9DAAoC;;KACrC,CAAC;GACW,aAAa,CAmCzB;;ICzBY,iBAAiB,GAA9B,MAAa,iBAAiB;CAE7B,CAAA;AAFY,iBAAiB;IAhB7B,QAAQ,CAAC;QACN,YAAY,EAAE;YACV,aAAa;YACb,aAAa;SAChB;QACD,OAAO,EAAE;YACL,YAAY;SACf;QACD,OAAO,EAAE;YACL,aAAa;YACb,aAAa;SAChB;QACD,SAAS,EAAE;YACP,gBAAgB;SACnB;KACJ,CAAC;GACW,iBAAiB,CAE7B;;ACzBD;;GAEG;;ACFH;;GAEG;;;;"}